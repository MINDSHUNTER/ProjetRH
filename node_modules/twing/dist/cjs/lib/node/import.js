"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createImportNode = void 0;
const node_1 = require("../node");
const traceable_method_1 = require("../helpers/traceable-method");
const createImportNode = (templateName, alias, global, line, column, tag) => {
    const baseNode = (0, node_1.createBaseNode)("import", {
        global
    }, {
        templateName,
        alias
    }, line, column, tag);
    const importNode = Object.assign(Object.assign({}, baseNode), { execute: async (executionContext) => {
            const { template, aliases } = executionContext;
            const { alias: aliasNode, templateName: templateNameNode } = baseNode.children;
            const { global } = baseNode.attributes;
            let aliasValue;
            if (templateNameNode.type === "name" && templateNameNode.attributes.name === '_self') {
                aliasValue = template;
            }
            else {
                const templateName = await templateNameNode.execute(executionContext);
                const loadTemplate = (0, traceable_method_1.getTraceableMethod)(template.loadTemplate, importNode.line, importNode.column, template.name);
                aliasValue = await loadTemplate(templateName);
            }
            aliases.set(aliasNode.attributes.name, aliasValue);
            if (global) {
                template.aliases.set(aliasNode.attributes.name, aliasValue);
            }
        } });
    return importNode;
};
exports.createImportNode = createImportNode;
