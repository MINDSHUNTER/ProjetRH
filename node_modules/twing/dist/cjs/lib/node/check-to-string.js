"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createCheckToStringNode = void 0;
const node_1 = require("../node");
const traceable_method_1 = require("../helpers/traceable-method");
const createCheckToStringNode = (value, line, column) => {
    const baseNode = (0, node_1.createBaseNode)("check_to_string", {}, {
        value
    }, line, column);
    return Object.assign(Object.assign({}, baseNode), { execute: (executionContext) => {
            const { template, sandboxed } = executionContext;
            const { value: valueNode } = baseNode.children;
            return valueNode.execute(executionContext)
                .then((value) => {
                if (sandboxed) {
                    const assertToStringAllowed = (0, traceable_method_1.getTraceableMethod)((value) => {
                        if ((value !== null) && (typeof value === 'object')) {
                            try {
                                template.checkMethodAllowed(value, 'toString');
                            }
                            catch (error) {
                                return Promise.reject(error);
                            }
                        }
                        return Promise.resolve(value);
                    }, valueNode.line, valueNode.column, template.name);
                    return assertToStringAllowed(value);
                }
                return value;
            });
        } });
};
exports.createCheckToStringNode = createCheckToStringNode;
