"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createTemplateNode = void 0;
const node_1 = require("../node");
const createTemplateNode = (body, parent, blocks, macros, traits, embeddedTemplates, source, line, column) => {
    const children = {
        body,
        blocks,
        macros,
        traits,
        securityCheck: (0, node_1.createBaseNode)(null)
    };
    if (parent !== null) {
        children.parent = parent;
    }
    const baseNode = (0, node_1.createBaseNode)("template", {
        index: 0,
        source
    }, children, line, column);
    const templateNode = Object.assign(Object.assign({}, baseNode), { get embeddedTemplates() {
            return embeddedTemplates;
        },
        get source() {
            return source;
        }, execute: (executionContext) => {
            const { template, outputBuffer, sourceMapRuntime } = executionContext;
            const { securityCheck, body } = templateNode.children;
            return securityCheck.execute(executionContext)
                .then(() => {
                sourceMapRuntime === null || sourceMapRuntime === void 0 ? void 0 : sourceMapRuntime.enterSourceMapBlock(templateNode.line, templateNode.column, templateNode.type, template.source, outputBuffer);
                return body.execute(executionContext).then(() => {
                    sourceMapRuntime === null || sourceMapRuntime === void 0 ? void 0 : sourceMapRuntime.leaveSourceMapBlock(outputBuffer);
                });
            });
        } });
    return templateNode;
};
exports.createTemplateNode = createTemplateNode;
