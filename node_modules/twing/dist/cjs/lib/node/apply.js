"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApplyNode = void 0;
const node_1 = require("../node");
const array_1 = require("./expression/array");
const filter_1 = require("./expression/call/filter");
const constant_1 = require("./expression/constant");
const createApplyNode = (filters, body, line, column) => {
    const baseNode = (0, node_1.createBaseNode)("apply", {}, {
        body,
        filters
    }, line, column, 'apply');
    const applyNode = Object.assign(Object.assign({}, baseNode), { execute: async (executionContext) => {
            const { outputBuffer } = executionContext;
            const { body, filters } = applyNode.children;
            const { line, column } = applyNode;
            outputBuffer.start();
            return body.execute(executionContext)
                .then(async () => {
                let content = outputBuffer.getAndClean();
                const keyValuePairs = (0, array_1.getKeyValuePairs)(filters);
                while (keyValuePairs.length > 0) {
                    const { key, value: filterArguments } = keyValuePairs.pop();
                    const filterName = key.attributes.value;
                    const filterNode = (0, filter_1.createFilterNode)((0, constant_1.createConstantNode)(content, line, column), filterName, filterArguments, line, column);
                    content = await filterNode.execute(executionContext);
                }
                outputBuffer.echo(content);
            });
        } });
    return applyNode;
};
exports.createApplyNode = createApplyNode;
