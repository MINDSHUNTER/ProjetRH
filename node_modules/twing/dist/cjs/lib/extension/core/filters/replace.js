"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.replace = void 0;
const is_traversable_1 = require("../../../helpers/is-traversable");
const iterator_to_hash_1 = require("../../../helpers/iterator-to-hash");
const runtime_1 = require("../../../error/runtime");
const phpStrtr = require('locutus/php/strings/strtr');
/**
 * Replaces strings within a string.
 *
 * @param {string} value String to replace in
 * @param {Array<string>|Map<string, string>} from Replace values
 *
 * @returns {Promise<string>}
 */
const replace = (_executionContext, value, from) => {
    const _do = () => {
        if ((0, is_traversable_1.isTraversable)(from)) {
            from = (0, iterator_to_hash_1.iteratorToHash)(from);
        }
        else if (typeof from !== 'object') {
            throw (0, runtime_1.createRuntimeError)(`The "replace" filter expects an hash or "Iterable" as replace values, got "${typeof from}".`);
        }
        if (value === null) {
            value = '';
        }
        return phpStrtr(value, from);
    };
    try {
        return Promise.resolve(_do());
    }
    catch (error) {
        return Promise.reject(error);
    }
};
exports.replace = replace;
