import { TwingTagHandler } from "./tag-handler";
import { TwingFilter } from "./filter";
import { TwingFunction } from "./function";
import { TwingNodeVisitor } from "./node-visitor";
import { TwingTest } from "./test";
import { TwingOperator } from "./operator";
import type { TwingExtension } from "./extension";
export interface TwingExtensionSet {
    readonly binaryOperators: Array<TwingOperator>;
    readonly filters: Map<string, TwingFilter>;
    readonly functions: Map<string, TwingFunction>;
    readonly nodeVisitors: Array<TwingNodeVisitor>;
    readonly tagHandlers: Array<TwingTagHandler>;
    readonly tests: Map<string, TwingTest>;
    readonly unaryOperators: Array<TwingOperator>;
    addExtension(extension: TwingExtension): void;
    addFilter(filter: TwingFilter): void;
    addFunction(twingFunction: TwingFunction): void;
    addNodeVisitor(visitor: TwingNodeVisitor): void;
    addOperator(operator: TwingOperator): void;
    addTagHandler(tagHandler: TwingTagHandler): void;
    addTest(test: TwingTest): void;
}
export declare const createExtensionSet: () => TwingExtensionSet;
